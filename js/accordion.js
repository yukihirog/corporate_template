function Accordion($node){	this.$node    = null;	this.$toggle  = null;	this.$body    = null;	this.duration = 200;	this.easing   = '';	this.init($node);};Accordion.prototype.init = function($node){	this.initNode($node);	this.initEvent();}Accordion.prototype.initNode = function($node){	if ($node) {		this.$node   = $($node);		this.$toggle = this.$node.find('.accordion-toggle').eq(0);		this.$body   = this.$node.find('.accordion-body').eq(0);	}};Accordion.prototype.initEvent = function($node){	if (this.$toggle) {		this.$toggle.on('click', $.proxy(this.onClickToggle, this));	}};Accordion.prototype.toggle = function(){	if (this.isOpened()) {		this.close();	} else {		this.open();	}};Accordion.prototype.isOpened = function(){	return this.$body && this.$body.is('[aria-expanded="true"]');};Accordion.prototype.open = function(){	if (this.$body) {		var height = 0;		this.$body.children().each(function(index, node){			height += $(node).outerHeight(true);		});				this.$body.css({ height : 'auto' });		height = this.$body.height();		this.$body.css({ height : '' });		this.$body			.stop()			.css({ 'height' : this.$body.height() })			.attr('aria-expanded', true)			.delay(0)			.animate({ 'height' : height }, this.duration, this.easing, $.proxy(function(){				this.$body.css({ 'height' : '' });			}, this))		;		this.$toggle.attr('aria-selected', true);	}};Accordion.prototype.close = function(){	if (this.$body) {		this.$body			.stop()			.css({ 'height' : this.$body.height() })			.attr('aria-expanded', false)			.animate({ 'height' : 0 }, this.duration, this.easing)		;		this.$toggle.attr('aria-selected', false);	}};Accordion.prototype.onClickToggle = function(e){	e.preventDefault();	this.toggle();};$(function(){	$('.accordion').each(function(index, node){		new Accordion(node);	});});